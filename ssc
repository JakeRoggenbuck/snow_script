#!/usr/bin/env python3
from termcolor import colored
import argparse
import shlex
import regex

parser = argparse.ArgumentParser()
parser.add_argument("filename", type=str)
args = parser.parse_args()

mem = []

def m(l):
    return int(c[l])
def sm(l):
    return str(mem[m(l)])
def im(l):
    return int(mem[m(l)])
def add(d):
    mem.append(d)

with open(args.filename)as f:
    lines = []
    for line in f:
        line = line.strip()
        if line:
            lines.extend(line.split(';'))

cline = 0
while cline <= len(lines)-1:
    c = shlex.split(lines[cline]);b = c[0]
    if b == "input":
        add(input(c[1]))
    elif b == "input#":
        mem[m(1)]=input(c[2])
    elif b == "int&":
        mem[m(1)]=im(1)
    elif b == "str&":
        mem[m(1)]=sm(1)
    elif b == "int":
        add(im(1))
    elif b == "str":
        add(sm(1))
    elif b == "calc":
        add(eval(sm(1)+c[2]+sm(3)))
    elif b == "calc#":
        mem[m(1)]=eval(sm(2)+c[3]+sm(4))
    elif b == "val":
        add(c[1])
    elif b == "val#":
        mem[m(1)]=c[2]
    elif b == "out":
        print(mem[m(1)])
    elif b == "push":
        add(sm(1)+sm(2))
    elif b == "push#":
        mem[m(1)]=sm(2)+sm(3)
    elif b == "dump":
        print(mem)
    elif b == "dump@":
        print(mem[c[1]])
    elif b == "type@":
        print(type(mem[m(1)]))
    elif b == "is_str":
        add(mem[m(1)]==str(c[2]))
    elif b == "is_int":
        add(mem[m(1)]==int(c[2]))
    elif b == "is_str#":
        mem[m(1)]=mem[m(2)]==str(c[3])
    elif b == "is_int#":
        mem[m(1)]=mem[m(2)]==int(c[3])
    elif b == "jump":
        cline+=int(c[1])
    elif b == "del":
        del mem[m(1)]
    elif b == "cp":
        mem[m(2)]=mem[m(1)]
    elif b == "len":
        mem.append(len(sm(1)))
    elif b == "len#":
        mem[m(1)] = len(sm(2))
    elif b == "char":
        mem.append(chr(im(1)))
    elif b == "char#":
        mem[m(1)] = chr(im(2))
    elif b == "ord":
        mem.append(ord(sm(1)))
    elif b == "ord#":
        mem[m(1)] = ord(sm(2))
    elif b == "if":
        if not mem[int(c[1])]:
            cline+=int(c[2])
    else:
        print(colored(f"Command not found \"{b}\"", 'red'))
    cline+=1

